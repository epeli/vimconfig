Given typescript.tsx (basic usage):
  var a = <div></div>
  var b = 123

Execute:
  AssertEqual 'tsxTag', SyntaxAt(1, 9)
  AssertEqual 'tsxIntrinsicTagName', SyntaxAt(1, 10)
  AssertEqual 'typescriptVariable', SyntaxAt(2, 1)

Given typescript.tsx (basic void):
  var a = <img/>
  var b = 123

Execute:
  AssertEqual 'tsxTag', SyntaxAt(1, 9)
  AssertEqual 'tsxIntrinsicTagName', SyntaxAt(1, 10)
  AssertEqual 'typescriptVariable', SyntaxAt(2, 1)

Given typescript.tsx (interpolation):
  var a = <Option key={item}></Option>;
  var b = 123

Execute:
  AssertEqual 'tsxTagName', SyntaxAt(1, 10)
  AssertEqual 'tsxTagName', SyntaxAt(1, 30)
  AssertEqual 'typescriptVariable', SyntaxAt(2, 1)

Given typescript.tsx (custom component):
  var a = <ion-gesture></ion-gesture>;
  var b = 123

Execute:
  AssertEqual 'tsxTag', SyntaxAt(1, 9)
  AssertEqual 'tsxIntrinsicTagName', SyntaxAt(1, 30)
  AssertEqual 'typescriptVariable', SyntaxAt(2, 1)

Given typescript.tsx (digit in tagname):
  var a = <h1></h1>;
  var b = 123

Execute:
  AssertEqual 'tsxTag', SyntaxAt(1, 9)
  AssertEqual 'tsxIntrinsicTagName', SyntaxAt(1, 16)
  AssertEqual 'typescriptVariable', SyntaxAt(2, 1)

Given typescript.tsx (paren + render props):
  var d =  (
    <Route component={() => <Home/>}/>
  )

Execute:
  AssertEqual 'tsxTagName', SyntaxAt(2, 4)

Given typescript.tsx (attributes):
  var d = <Route component={() => <Home/>}
    another-attribute="1"
  />

Execute:
  AssertEqual 'tsxTagName', SyntaxAt(1, 10)
  AssertEqual 'tsxTagName', SyntaxAt(1, 34)
  AssertEqual 'tsxAttrib', SyntaxAt(1, 16)
  AssertEqual 'tsxAttrib', SyntaxAt(2, 3)
  AssertEqual 'tsxAttrib', SyntaxAt(2, 11)

Given typescript.tsx (paren + attributes):
  var d = (
    <Route component={() => <Home/>}
      another-attribute="1"
    />
  )

Execute:
  AssertEqual 'tsxAttrib', SyntaxAt(2, 10)
  AssertEqual 'tsxTagName', SyntaxAt(2, 28)
  AssertEqual 'tsxAttrib', SyntaxAt(3, 5)
  AssertEqual 'tsxAttrib', SyntaxAt(3, 13)
